// Generated by view binder compiler. Do not edit!
package recreate.india.main.startupcarvaan.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import recreate.india.main.startupcarvaan.R;

public final class SingleMoneyTransBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView amountTrans;

  @NonNull
  public final TextView dateTransaction;

  @NonNull
  public final TextView destinationTransac;

  @NonNull
  public final TextView methodTrans;

  @NonNull
  public final TextView useridtransaction;

  private SingleMoneyTransBinding(@NonNull CardView rootView, @NonNull TextView amountTrans,
      @NonNull TextView dateTransaction, @NonNull TextView destinationTransac,
      @NonNull TextView methodTrans, @NonNull TextView useridtransaction) {
    this.rootView = rootView;
    this.amountTrans = amountTrans;
    this.dateTransaction = dateTransaction;
    this.destinationTransac = destinationTransac;
    this.methodTrans = methodTrans;
    this.useridtransaction = useridtransaction;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static SingleMoneyTransBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SingleMoneyTransBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.single_money_trans, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SingleMoneyTransBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.amount_trans;
      TextView amountTrans = rootView.findViewById(id);
      if (amountTrans == null) {
        break missingId;
      }

      id = R.id.date_transaction;
      TextView dateTransaction = rootView.findViewById(id);
      if (dateTransaction == null) {
        break missingId;
      }

      id = R.id.destination_transac;
      TextView destinationTransac = rootView.findViewById(id);
      if (destinationTransac == null) {
        break missingId;
      }

      id = R.id.method_trans;
      TextView methodTrans = rootView.findViewById(id);
      if (methodTrans == null) {
        break missingId;
      }

      id = R.id.useridtransaction;
      TextView useridtransaction = rootView.findViewById(id);
      if (useridtransaction == null) {
        break missingId;
      }

      return new SingleMoneyTransBinding((CardView) rootView, amountTrans, dateTransaction,
          destinationTransac, methodTrans, useridtransaction);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
