// Generated by view binder compiler. Do not edit!
package recreate.india.main.startupcarvaan.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewpager.widget.ViewPager;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import recreate.india.main.startupcarvaan.R;

public final class ActivityIntroSliderBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TabLayout dotLayout;

  @NonNull
  public final Button nextBtn;

  @NonNull
  public final Button skipBtn;

  @NonNull
  public final ViewPager viewPager;

  private ActivityIntroSliderBinding(@NonNull RelativeLayout rootView, @NonNull TabLayout dotLayout,
      @NonNull Button nextBtn, @NonNull Button skipBtn, @NonNull ViewPager viewPager) {
    this.rootView = rootView;
    this.dotLayout = dotLayout;
    this.nextBtn = nextBtn;
    this.skipBtn = skipBtn;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityIntroSliderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityIntroSliderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_intro_slider, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityIntroSliderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dotLayout;
      TabLayout dotLayout = rootView.findViewById(id);
      if (dotLayout == null) {
        break missingId;
      }

      id = R.id.nextBtn;
      Button nextBtn = rootView.findViewById(id);
      if (nextBtn == null) {
        break missingId;
      }

      id = R.id.skipBtn;
      Button skipBtn = rootView.findViewById(id);
      if (skipBtn == null) {
        break missingId;
      }

      id = R.id.viewPager;
      ViewPager viewPager = rootView.findViewById(id);
      if (viewPager == null) {
        break missingId;
      }

      return new ActivityIntroSliderBinding((RelativeLayout) rootView, dotLayout, nextBtn, skipBtn,
          viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
