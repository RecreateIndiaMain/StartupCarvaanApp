// Generated by view binder compiler. Do not edit!
package recreate.india.main.startupcarvaan.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import recreate.india.main.startupcarvaan.R;

public final class DialoginvestBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnBuy;

  @NonNull
  public final ImageView close68;

  @NonNull
  public final TextView collectedInvestment;

  @NonNull
  public final EditText noofshares;

  @NonNull
  public final TextView priceOfShares;

  @NonNull
  public final TextView requiredInvestment;

  private DialoginvestBinding(@NonNull LinearLayout rootView, @NonNull Button btnBuy,
      @NonNull ImageView close68, @NonNull TextView collectedInvestment,
      @NonNull EditText noofshares, @NonNull TextView priceOfShares,
      @NonNull TextView requiredInvestment) {
    this.rootView = rootView;
    this.btnBuy = btnBuy;
    this.close68 = close68;
    this.collectedInvestment = collectedInvestment;
    this.noofshares = noofshares;
    this.priceOfShares = priceOfShares;
    this.requiredInvestment = requiredInvestment;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialoginvestBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialoginvestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialoginvest, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialoginvestBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_buy;
      Button btnBuy = rootView.findViewById(id);
      if (btnBuy == null) {
        break missingId;
      }

      id = R.id.close68;
      ImageView close68 = rootView.findViewById(id);
      if (close68 == null) {
        break missingId;
      }

      id = R.id.collected_investment;
      TextView collectedInvestment = rootView.findViewById(id);
      if (collectedInvestment == null) {
        break missingId;
      }

      id = R.id.noofshares;
      EditText noofshares = rootView.findViewById(id);
      if (noofshares == null) {
        break missingId;
      }

      id = R.id.price_of_shares;
      TextView priceOfShares = rootView.findViewById(id);
      if (priceOfShares == null) {
        break missingId;
      }

      id = R.id.required_investment;
      TextView requiredInvestment = rootView.findViewById(id);
      if (requiredInvestment == null) {
        break missingId;
      }

      return new DialoginvestBinding((LinearLayout) rootView, btnBuy, close68, collectedInvestment,
          noofshares, priceOfShares, requiredInvestment);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
