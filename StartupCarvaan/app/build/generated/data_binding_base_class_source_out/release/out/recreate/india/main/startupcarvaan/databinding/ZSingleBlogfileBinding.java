// Generated by view binder compiler. Do not edit!
package recreate.india.main.startupcarvaan.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.pierfrancescosoffritti.androidyoutubeplayer.core.player.views.YouTubePlayerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import recreate.india.main.startupcarvaan.R;

public final class ZSingleBlogfileBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageButton addAttatchment;

  @NonNull
  public final EditText addcomment;

  @NonNull
  public final TextView blogtitle;

  @NonNull
  public final ImageView commentButton;

  @NonNull
  public final ImageView commentimage;

  @NonNull
  public final TextView description;

  @NonNull
  public final ImageView imageview;

  @NonNull
  public final ImageView likeimage;

  @NonNull
  public final TextView numberOfComments;

  @NonNull
  public final TextView numberOfLikes;

  @NonNull
  public final LinearLayout textFile;

  @NonNull
  public final ImageView userPostImage;

  @NonNull
  public final YouTubePlayerView videoplayer;

  private ZSingleBlogfileBinding(@NonNull CardView rootView, @NonNull ImageButton addAttatchment,
      @NonNull EditText addcomment, @NonNull TextView blogtitle, @NonNull ImageView commentButton,
      @NonNull ImageView commentimage, @NonNull TextView description, @NonNull ImageView imageview,
      @NonNull ImageView likeimage, @NonNull TextView numberOfComments,
      @NonNull TextView numberOfLikes, @NonNull LinearLayout textFile,
      @NonNull ImageView userPostImage, @NonNull YouTubePlayerView videoplayer) {
    this.rootView = rootView;
    this.addAttatchment = addAttatchment;
    this.addcomment = addcomment;
    this.blogtitle = blogtitle;
    this.commentButton = commentButton;
    this.commentimage = commentimage;
    this.description = description;
    this.imageview = imageview;
    this.likeimage = likeimage;
    this.numberOfComments = numberOfComments;
    this.numberOfLikes = numberOfLikes;
    this.textFile = textFile;
    this.userPostImage = userPostImage;
    this.videoplayer = videoplayer;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ZSingleBlogfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ZSingleBlogfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.z_single_blogfile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ZSingleBlogfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addAttatchment;
      ImageButton addAttatchment = rootView.findViewById(id);
      if (addAttatchment == null) {
        break missingId;
      }

      id = R.id.addcomment;
      EditText addcomment = rootView.findViewById(id);
      if (addcomment == null) {
        break missingId;
      }

      id = R.id.blogtitle;
      TextView blogtitle = rootView.findViewById(id);
      if (blogtitle == null) {
        break missingId;
      }

      id = R.id.commentButton;
      ImageView commentButton = rootView.findViewById(id);
      if (commentButton == null) {
        break missingId;
      }

      id = R.id.commentimage;
      ImageView commentimage = rootView.findViewById(id);
      if (commentimage == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = rootView.findViewById(id);
      if (description == null) {
        break missingId;
      }

      id = R.id.imageview;
      ImageView imageview = rootView.findViewById(id);
      if (imageview == null) {
        break missingId;
      }

      id = R.id.likeimage;
      ImageView likeimage = rootView.findViewById(id);
      if (likeimage == null) {
        break missingId;
      }

      id = R.id.number_of_comments;
      TextView numberOfComments = rootView.findViewById(id);
      if (numberOfComments == null) {
        break missingId;
      }

      id = R.id.number_of_likes;
      TextView numberOfLikes = rootView.findViewById(id);
      if (numberOfLikes == null) {
        break missingId;
      }

      id = R.id.textFile;
      LinearLayout textFile = rootView.findViewById(id);
      if (textFile == null) {
        break missingId;
      }

      id = R.id.userPostImage;
      ImageView userPostImage = rootView.findViewById(id);
      if (userPostImage == null) {
        break missingId;
      }

      id = R.id.videoplayer;
      YouTubePlayerView videoplayer = rootView.findViewById(id);
      if (videoplayer == null) {
        break missingId;
      }

      return new ZSingleBlogfileBinding((CardView) rootView, addAttatchment, addcomment, blogtitle,
          commentButton, commentimage, description, imageview, likeimage, numberOfComments,
          numberOfLikes, textFile, userPostImage, videoplayer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
