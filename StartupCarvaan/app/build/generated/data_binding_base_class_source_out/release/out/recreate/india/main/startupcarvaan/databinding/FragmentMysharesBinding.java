// Generated by view binder compiler. Do not edit!
package recreate.india.main.startupcarvaan.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import recreate.india.main.startupcarvaan.R;

public final class FragmentMysharesBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final LinearLayout ll1;

  @NonNull
  public final RecyclerView mysharerecyclerview;

  @NonNull
  public final TextView profit;

  @NonNull
  public final TextView totalinvest;

  @NonNull
  public final TextView totalprofit;

  private FragmentMysharesBinding(@NonNull FrameLayout rootView, @NonNull LinearLayout ll1,
      @NonNull RecyclerView mysharerecyclerview, @NonNull TextView profit,
      @NonNull TextView totalinvest, @NonNull TextView totalprofit) {
    this.rootView = rootView;
    this.ll1 = ll1;
    this.mysharerecyclerview = mysharerecyclerview;
    this.profit = profit;
    this.totalinvest = totalinvest;
    this.totalprofit = totalprofit;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMysharesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMysharesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_myshares, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMysharesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ll1;
      LinearLayout ll1 = rootView.findViewById(id);
      if (ll1 == null) {
        break missingId;
      }

      id = R.id.mysharerecyclerview;
      RecyclerView mysharerecyclerview = rootView.findViewById(id);
      if (mysharerecyclerview == null) {
        break missingId;
      }

      id = R.id.profit;
      TextView profit = rootView.findViewById(id);
      if (profit == null) {
        break missingId;
      }

      id = R.id.totalinvest;
      TextView totalinvest = rootView.findViewById(id);
      if (totalinvest == null) {
        break missingId;
      }

      id = R.id.totalprofit;
      TextView totalprofit = rootView.findViewById(id);
      if (totalprofit == null) {
        break missingId;
      }

      return new FragmentMysharesBinding((FrameLayout) rootView, ll1, mysharerecyclerview, profit,
          totalinvest, totalprofit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
