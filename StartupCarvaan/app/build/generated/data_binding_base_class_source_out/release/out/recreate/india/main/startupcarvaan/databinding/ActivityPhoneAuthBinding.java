// Generated by view binder compiler. Do not edit!
package recreate.india.main.startupcarvaan.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import recreate.india.main.startupcarvaan.R;

public final class ActivityPhoneAuthBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView counter;

  @NonNull
  public final Button getotp;

  @NonNull
  public final Button login;

  @NonNull
  public final EditText number;

  @NonNull
  public final EditText otp;

  @NonNull
  public final TextView otpresend;

  @NonNull
  public final LinearLayout otpverify;

  @NonNull
  public final TextView phonenumberpage;

  @NonNull
  public final LinearLayout phoneverify;

  private ActivityPhoneAuthBinding(@NonNull LinearLayout rootView, @NonNull TextView counter,
      @NonNull Button getotp, @NonNull Button login, @NonNull EditText number,
      @NonNull EditText otp, @NonNull TextView otpresend, @NonNull LinearLayout otpverify,
      @NonNull TextView phonenumberpage, @NonNull LinearLayout phoneverify) {
    this.rootView = rootView;
    this.counter = counter;
    this.getotp = getotp;
    this.login = login;
    this.number = number;
    this.otp = otp;
    this.otpresend = otpresend;
    this.otpverify = otpverify;
    this.phonenumberpage = phonenumberpage;
    this.phoneverify = phoneverify;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPhoneAuthBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPhoneAuthBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_phone_auth, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPhoneAuthBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.counter;
      TextView counter = rootView.findViewById(id);
      if (counter == null) {
        break missingId;
      }

      id = R.id.getotp;
      Button getotp = rootView.findViewById(id);
      if (getotp == null) {
        break missingId;
      }

      id = R.id.login;
      Button login = rootView.findViewById(id);
      if (login == null) {
        break missingId;
      }

      id = R.id.number;
      EditText number = rootView.findViewById(id);
      if (number == null) {
        break missingId;
      }

      id = R.id.otp;
      EditText otp = rootView.findViewById(id);
      if (otp == null) {
        break missingId;
      }

      id = R.id.otpresend;
      TextView otpresend = rootView.findViewById(id);
      if (otpresend == null) {
        break missingId;
      }

      id = R.id.otpverify;
      LinearLayout otpverify = rootView.findViewById(id);
      if (otpverify == null) {
        break missingId;
      }

      id = R.id.phonenumberpage;
      TextView phonenumberpage = rootView.findViewById(id);
      if (phonenumberpage == null) {
        break missingId;
      }

      id = R.id.phoneverify;
      LinearLayout phoneverify = rootView.findViewById(id);
      if (phoneverify == null) {
        break missingId;
      }

      return new ActivityPhoneAuthBinding((LinearLayout) rootView, counter, getotp, login, number,
          otp, otpresend, otpverify, phonenumberpage, phoneverify);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
