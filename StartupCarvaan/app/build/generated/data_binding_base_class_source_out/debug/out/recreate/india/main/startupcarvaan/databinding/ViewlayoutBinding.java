// Generated by view binder compiler. Do not edit!
package recreate.india.main.startupcarvaan.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import recreate.india.main.startupcarvaan.R;

public final class ViewlayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout experience;

  @NonNull
  public final TextView experiencebtn;

  @NonNull
  public final LinearLayout personalinfo;

  @NonNull
  public final TextView personalinfobtn;

  @NonNull
  public final LinearLayout review;

  private ViewlayoutBinding(@NonNull RelativeLayout rootView, @NonNull LinearLayout experience,
      @NonNull TextView experiencebtn, @NonNull LinearLayout personalinfo,
      @NonNull TextView personalinfobtn, @NonNull LinearLayout review) {
    this.rootView = rootView;
    this.experience = experience;
    this.experiencebtn = experiencebtn;
    this.personalinfo = personalinfo;
    this.personalinfobtn = personalinfobtn;
    this.review = review;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewlayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewlayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.viewlayout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewlayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.experience;
      LinearLayout experience = rootView.findViewById(id);
      if (experience == null) {
        break missingId;
      }

      id = R.id.experiencebtn;
      TextView experiencebtn = rootView.findViewById(id);
      if (experiencebtn == null) {
        break missingId;
      }

      id = R.id.personalinfo;
      LinearLayout personalinfo = rootView.findViewById(id);
      if (personalinfo == null) {
        break missingId;
      }

      id = R.id.personalinfobtn;
      TextView personalinfobtn = rootView.findViewById(id);
      if (personalinfobtn == null) {
        break missingId;
      }

      id = R.id.review;
      LinearLayout review = rootView.findViewById(id);
      if (review == null) {
        break missingId;
      }

      return new ViewlayoutBinding((RelativeLayout) rootView, experience, experiencebtn,
          personalinfo, personalinfobtn, review);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
