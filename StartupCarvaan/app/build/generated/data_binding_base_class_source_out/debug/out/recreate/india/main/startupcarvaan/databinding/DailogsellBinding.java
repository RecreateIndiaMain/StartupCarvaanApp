// Generated by view binder compiler. Do not edit!
package recreate.india.main.startupcarvaan.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import recreate.india.main.startupcarvaan.R;

public final class DailogsellBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnSell;

  @NonNull
  public final TextView price;

  @NonNull
  public final TextView priceOfShares;

  @NonNull
  public final EditText shares;

  @NonNull
  public final Spinner spinner3;

  @NonNull
  public final TextView totalsharestosell;

  private DailogsellBinding(@NonNull LinearLayout rootView, @NonNull Button btnSell,
      @NonNull TextView price, @NonNull TextView priceOfShares, @NonNull EditText shares,
      @NonNull Spinner spinner3, @NonNull TextView totalsharestosell) {
    this.rootView = rootView;
    this.btnSell = btnSell;
    this.price = price;
    this.priceOfShares = priceOfShares;
    this.shares = shares;
    this.spinner3 = spinner3;
    this.totalsharestosell = totalsharestosell;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DailogsellBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DailogsellBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dailogsell, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DailogsellBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_sell;
      Button btnSell = rootView.findViewById(id);
      if (btnSell == null) {
        break missingId;
      }

      id = R.id.price;
      TextView price = rootView.findViewById(id);
      if (price == null) {
        break missingId;
      }

      id = R.id.price_of_shares;
      TextView priceOfShares = rootView.findViewById(id);
      if (priceOfShares == null) {
        break missingId;
      }

      id = R.id.shares;
      EditText shares = rootView.findViewById(id);
      if (shares == null) {
        break missingId;
      }

      id = R.id.spinner3;
      Spinner spinner3 = rootView.findViewById(id);
      if (spinner3 == null) {
        break missingId;
      }

      id = R.id.totalsharestosell;
      TextView totalsharestosell = rootView.findViewById(id);
      if (totalsharestosell == null) {
        break missingId;
      }

      return new DailogsellBinding((LinearLayout) rootView, btnSell, price, priceOfShares, shares,
          spinner3, totalsharestosell);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
